{"version":3,"sources":["component/MatchDetailCard.js","component/MatchSmallCard.js","pages/TeamPage.js","component/YearSelector.js","pages/MatchPage.js","component/TeamTile.js","pages/HomeTeamPage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","classname","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","console","log","fetchTeam","title","value","totalWins","color","totalMatches","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatchess","fetchMatches","TeamTile","HomeTeamPage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44e5d037.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./MatchDetailCard.scss\"\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n    if(!match) return null;\r\n\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute =`/team/${otherTeam}`;\t\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    \r\n    return (\r\n\t    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n\t    <div>\r\n\t    \t<span className=\"vs\"> vs</span>\r\n\t    \t<h2> <Link to={otherTeamRoute}>  {otherTeam}</Link></h2>\r\n\t    \t<h2 className=\"match-date\"> {match.date}</h2>\r\n\t    \t<h3 className=\"match-venue\"> at {match.venue}</h3>\r\n\t    \t<h3 classname=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </h3>\r\n\t    </div>\r\n\t    <div className=\"additional-detail\">\r\n\t    <h3> First Innings</h3>\r\n\t    \t<p>{match.team1}</p>\r\n\t    \t<h3> Second Innings</h3>\r\n\t    \t<p>{match.team2}</p>\r\n\t    \t\r\n\t    \t<h3> Man of the Match</h3>\r\n\t    \t<p>{match.playerOfMatch}</p>\r\n\t    \t<h3> Umpires</h3>\r\n\t    \t<p>{match.umpire1},{match.umpire2}</p>\r\n\t    </div>\r\n\t    </div>\r\n\t );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./MatchSmallCard.scss\"\r\n\r\nexport const MatchSmallCard = ({match, teamName}) => {\r\n  if(!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute =`/team/${otherTeam}`;\t \r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n    \r\n    <h3> vs\r\n    \t<Link to={otherTeamRoute}>  {otherTeam}</Link></h3>\r\n    \t<p>{match.matchWinner} won by {match.resultMargin} {match.result} </p>\r\n\r\n    </div>\r\n  );\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../component/MatchDetailCard';\r\nimport { MatchSmallCard } from '../component/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\t\r\n\tconst [team, setTeam] = useState({matches: []});\r\n\tconst { teamName } = useParams();\r\n\t\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchTeam = async () => {\r\n\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetTeam(data);\r\n\r\n\t\t\t};\r\n\t\t\tfetchTeam();\r\n\t\t\t\r\n\t\t}, [teamName]\t\r\n\t\r\n\t);\r\n\t\r\n\tif(!team || !team.teamName) {return <h1> Team Not Found </h1>}\r\n \r\n\treturn (\r\n    <div className=\"TeamPage\"> \r\n    \t<div className=\"team-name-section\"> <h1 className=\"team-name\"> {team.teamName} </h1> </div>\r\n    \t<div className=\"win-loss-section\">\r\n    \t\tWins/Losses\r\n    \t\t<PieChart\r\n    \t\t  data={[\r\n    \t\t    { title: 'Wins', value: team.totalWins, color: '#E38627' },\r\n    \t\t    { title: 'Losses', value: team.totalMatches-team.totalWins, color: '#C13C37' },\r\n    \t\t  ]}\r\n    \t\t/>;\r\n    \t</div>\r\n    \t<div className=\"match-detail-section\">\r\n    \t\t<h3>Latest Matches</h3>\r\n    \t\t<MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n    \t </div>\r\n    \t {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName}  match={match} />)}\r\n    \t <div>\r\n    \t    <Link to={`/team/${teamName}/matches/${process.env.REACT_APP_END_YEAR}`} >\r\n    \t    More\r\n    \t    </Link></div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//creating a state using useState, team is a state and using setTeam to populate state\r\n// \t call to useEffect   \t when component loads which is [] array, call fetchMatches, calls url and sets response\r\n//use {team.teamName} JSX to render values\r\n    \t \r\n   //to send to backend use react router http://localhost:3000/team/Chennai%20Super%20Kings \r\n    \t \r\n    \t//adding div for <h1> to add css class\r\n         \r\n    \t ","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_START_YEAR;\r\n    const endYear = process.env.REACT_APP_END_YEAR;\r\n    \r\n\tfor(let i = startYear; i <= endYear; i++){\r\n\t\tyears.push(i);\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t\t<dl className=\"years-list\">\r\n\t\t\t\t{ years.map(year => ( <di key={year}>\r\n\t\t\t\t  \t<Link to={`/team/${teamName}/matches/${year}`} > {year}</Link>\r\n\t\t\t\t  </di>\r\n\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</dl> \r\n\t\t)\r\n\t}","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../component/MatchDetailCard';\r\nimport { YearSelector } from '../component/YearSelector';\r\nimport './MatchPage.scss';\r\n\r\n\r\nexport const MatchPage = () => {\r\n\t\r\n\tconst[matches, setMatchess] = useState([]);\r\n\tconst { teamName, year } = useParams();\r\n\r\n\t\r\n\tuseEffect(\r\n\t\t\t() => {\r\n\t\t\t\tconst fetchMatches = async () => {\r\n\t\t\t\t\tconst response = await fetch(\r\n\t\t\t\t\t\t\t`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n\t\t\t\t\tconst data = await response.json();\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tsetMatchess(data);\r\n\t\t\t\t};\r\n\t\t\t\tfetchMatches();\r\n\t\t\t\t\r\n\t\t\t}, [teamName, year]\t\r\n\t\t\r\n\t\t);\r\n\t\r\n\treturn (\r\n\t\t\t\r\n    <div className=\"MatchPage\">\r\n    \t<div className=\"year-selector\"><h3> {teamName} matches in {year} </h3>\r\n    \t<YearSelector teamName={teamName} /></div>\r\n    \t<div className=\"match-detail\">\r\n    \t{\r\n    \t\tmatches.map(match => <MatchDetailCard key={match.id} teamName={teamName}  match={match} />)\r\n\r\n    \t}\r\n    \t</div>\r\n    </div>\r\n  );\r\n}\r\n \r\n\r\n/*\r\n * const response = await fetch(`http://localhost:8090/team/Delhi Capitals/matches?year=2019`);\r\n * replace with\r\n *const response = await fetch(`http://localhost:8090/team/${teamName}/matches?year=2019`);\r\n\r\n * rename App.css to App.scss after yarn add node-sass -D\r\n * import in App.js App.scss\r\n * \r\n */\r\n \r\n\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./TeamTile.scss\";\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"TeamTile\">\r\n\t\t\t<h1>\r\n\t\t\t<Link to={`/team/${teamName}`}>{teamName}</Link>\r\n\t\t\t</h1>\r\n\t\t</div>\r\n\t)\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { TeamTile } from '../component/TeamTile';\r\nimport './HomeTeamPage.scss';\r\n\r\nexport const HomeTeamPage = () => {\r\n\t\r\n\tconst [teams, setTeams] = useState([]);\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchAllTeams = async () => {\r\n\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetTeams(data);\r\n\r\n\t\t\t};\r\n\t\t\tfetchAllTeams();\r\n\t\t\t\r\n\t\t}, []\t\r\n\t\r\n\t);\r\n\t\r\n\treturn (\r\n    <div className=\"HomeTeamPage\"> \r\n    \t<div className=\"header-section\"> \r\n    \t    <h1 className=\"app-name\"> Sports Dashboard </h1>\r\n    \t</div>\r\n    \t<h4>\r\n    \t<div className=\"team-grid\">\r\n    \t\t{teams.map(team => <TeamTile key={team.id} teamName={team.teamName} /> )}\r\n    \t</div></h4>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import './App.scss';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {TeamPage} from './pages/TeamPage';\nimport {MatchPage} from './pages/MatchPage';\nimport {HomeTeamPage} from './pages/HomeTeamPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n    \t<Switch>\n\t    \t<Route path=\"/team/:teamName/matches/:year\">\n\t\t\t\t<MatchPage />\n\t\t\t</Route>\n\t    \t\n\t\t\t<Route path=\"/team/:teamName\">\n\t    \t\t<TeamPage />\n\t    \t</Route>\n\t    \t\n\t    \t<Route path=\"/\">\n    \t\t<HomeTeamPage />\n    \t\t</Route>\n\n\t\t</Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}